{"version":3,"sources":["onair.png","nextcloud.png","components/Header/Header.js","components/Body/Body.js","components/Footer/Footer.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Header","props","state","modal","toggle","bind","this","setState","className","justifyContent","xs","horizontal","vertical","src","logo","alt","style","width","height","paddingTop","isOpen","color","onClick","React","Component","Body","sm","md","size","offset","paddingBottom","allowFullScreen","Footer","href","nextcloud","paddingLeft","paddingRight","class","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4f44c404.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/onair.7343924e.png\";","module.exports = __webpack_public_path__ + \"static/media/nextcloud.360d5d24.png\";","import React from 'react';\nimport { Col, Row, Button, Modal, ModalHeader, ModalBody, ModalFooter, Card, CardImg } from 'reactstrap';\n\n\nimport logo from  '../../onair.png';\n\n\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n\n  render() {\n    return(\n        <Row className='App-header' justifyContent='center'>\n          <Col xs=\"12\" horizontal=\"center\" vertical='center' className='logo'>\n            <embed src={logo} alt='logo' style={{ width: \"20%\", height: \"auto\", paddingTop: \"24px\" }} />\n          </Col>\n          <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle}>Next up on the Upstream...</ModalHeader>\n          <ModalBody>\n            <Card>\n              <CardImg src='' alt='modalpic' />\n            </Card>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.toggle}>I'm definitely tuning in!</Button>\n          </ModalFooter>\n        </Modal>\n        </Row>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport { Col, Row } from 'reactstrap';\nimport ResponsiveEmbed from 'react-responsive-embed';\n\n\nconst Body = () => (\n        <Row className='Body'>\n          <Col sm=\"12\" md={{ size: 8, offset: 2 }} style={{paddingTop: \"48px\", paddingBottom: \"48px\"}}>\n          {/* <iframe width=\"853\" height=\"480\"  src=\"https://www.youtube.com/embed/live_stream?channel=UCWK7I10nUKDRBv_stW8y61g\" title='upstreamlive' frameBorder=\"0\" allowFullScreen></iframe>     */}\n          <ResponsiveEmbed src=\"https://restreamer.uprootx.com/player.html\" allowFullScreen />\n          </Col>\n        </Row>\n\n);\n\nexport default Body;\n// {/* <iframe src=\"http://71.233.158.194:8080/player.html\" name=\"restreamer-player\" width=\"800\" height=\"450\" scrolling=\"no\" frameborder=\"0\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\" allowfullscreen=\"true\"></iframe> */}","import React from 'react';\nimport { Col, Row } from 'reactstrap';\n\n// import strings from  '../../PWLB-HS2.svg';\nimport nextcloud from  '../../nextcloud.png';\n\n\nconst Footer = () => (\n      <Row className=\"Footer\" style={{ paddingBottom: \"24px\", paddingTop: \"24px\" }}>\n        <Col xs={{size: 12}} sm={{size: 12}} md={{size: 12}}>\n            <a href='https://cloud.uprootx.com/'><embed src={nextcloud} alt='cloud' style={{ width: \"15%\", height: \"auto\", paddingTop: \"24px\" }} /></a>\n            <h3 style={{ paddingTop:'12px'}}>\n             <a href='https://www.telegram.org'><i style={{ paddingLeft:'24px', paddingRight:'24px', color:'white' }}  class=\"fas fa-comments\"></i></a>\n             <a href='https://www.facebook.com/christophercyrusgoulet/'><i style={{ paddingLeft:'24px', paddingRight:'24px', color:'white' }} class=\"fab fa-facebook-square\"></i></a>\n             <a href='https://www.twitter.com/gr8goulet/'><i style={{ paddingLeft:'24px', paddingRight:'24px', color:'white' }}  class=\"fab fa-twitter\"></i></a>\n            </h3>\n        </Col>\n        {/* <Col xs={{size: 12, order: 1}} sm={{size: 12, order: 1}} md={{size: 6, order: 2}}>\n           <h3 style={{ width: \"20%\", height: \"auto\", color:\"red\", paddingTop:'24px'}}>Chat Link   <i class=\"fas fa-comments\"></i></h3> \n        </Col> */}\n\n      </Row>      \n);\n\nexport default Footer;","import React, { Component } from 'react';\n\nimport Header from './components/Header/Header';\nimport Body from './components/Body/Body';\nimport Footer from './components/Footer/Footer';\n\n\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Body />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}